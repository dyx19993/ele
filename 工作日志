// 日报   研究新的技术，为日后项目优化做准备。 对项目的BUG修改，以及维护。
// asp .net java php 手机开发(ios) windowPhone 前端 css html js
// 做过项目。自我排除BUG(解决问题)。
****************************2020.4.9****************************************************
**********************高德地图API**************************
官网：https://lbs.amap.com/
注册--》登陆-》进入到控制台。--》我的应用-》右上角创建新应用


*****************************************************
发送验证码：
    https://www.juhe.cn  阿里大鱼
    注册，登陆。进入个人中心-》我的接口-》申请新数据--》搜索”短信“---》短信Api服务。
**********queryString*********
// queryStirng是内置模块 将对象转为urlencoded 也可以将urlencode转为对象
const querystirng = require("querystring");
const obj = {
    userName:"laotie",
    age:12
}
// 将对象转为urlencoded
console.log(querystirng.stringify(obj));// userName=laotie&age=12
const str = "a=1&b=2";
// 将urlencode转为对象
console.log(querystirng.parse(str));// { a: '1', b: '2' }

***********************************
减法：
    服务器端 会使用。
作业：
1、登陆手机验证码的检验功能。
2、完成倒计时功能。（倒计时60秒，时间到了以后才可以再次点击按钮。）
3、将登陆之后的信息保存在VUEX当中。将我带着大家完成的登陆操作，改造成VUEX
4、后台管理当中增加一个用户管理。
    可以根据手机号查找用户。
    可以对该用户进行冻结操作。

****************************2020.4.8****************************************************
在店铺列表当中：
    操作--》增加一个按钮，按钮的名字“增加商品类别”，提交完之后，自动跳转到商品类别列表。
商品列表：
    添加，搜索，分页。
    三级联动
        商品的名称：
        商品的图片：
        所属于类别：店铺类别   店铺列表   商品类别
总结：
    1、vuex的使用。
    2、router基本使用。
    3、vue 生命周期   ，守卫。axios的拦截。
    4、watch
    5、封装了分页，dialog.
    模块化。
    1、项目介绍：该项目属于餐饮配送类型的系统。通过该系统可以完成XXX事.
    2、个人职责
        1、独立完成该系统的架构设计。
        2、完成管理员，店铺以及商品模块的功能设计开发工作。
        3、完成相关操作的日志系统。
        4、完成用户操作行为的跟踪体验模式。
    3、应用技术
        vue-cli+vuex+vue-router+mongodb+node+elementUI
    *******************************
    项目是什么？代码数据
    前端职责：调用接口将数据以更加友好的形式呈现给用户。
    后端职责：负责接供相对应的接口。
    代理的原理：自己完不成的事，交给代理去做。代理（服务器）request node
        1、node  request

****************************2020.4.7****************************************************
问题：
    this.$store:vue实例 下面使用this.$store
    $store,:模板当中可以直接使用实例下的属性以及方法。
    store：直接使用。
1、搜索功能。


****************************2020.4.3****************************************************
1、完成分页封装。令牌。
2、完成店铺的增加，渲染，搜索。（图片上传）。
****************排错**********************
1、程序要能看的懂。
    1、访问的接口报404
        1、服务代理写对了没有
            1、代理文件vue.config.js写错地方了。（应该放到项目的根目录）
            2、proxy target:服务器的地址。
        2、接口开启了没有
            server.js   node server.js
    2、点击登陆没有反映。
*****************************************
程序，掌握方法，想学都能学会。（敲）
*****************************************
父子传值：
props:{
    actionName:{
        type:String,// 可以控制接收的数据类型
        default:"getAdminList"// 默认值。当未传递该值时的默认值
    },
    obj:{
        type:Object,// 如果接收的是对象，默认返回值需要是一个函数。
        default(){
            return {
                d:100
            }
        }
    }
},
*********************************************************
1、将db2模块完善。
          2、点击删除时给予一个是否删除的提示。（使用elementUI 组件（message-box））
          3、完成管理员列表的删除。
          4、扩展：完成修改密码。
              在管理员列表的操作当中增加一个名字为修改密码的按钮。点击按钮进入到一个路由组件。
              在该组件当中完成对该管理员的密码修改。
                  管理员账号：xxxx
                  管理员新密码：文本框
                  再次输入新密码:xxxxx
                      提交
          5、修改密码：修改自己的密码
              原密码：
              新密码：
              重复新密码：
              提交
          6、将upPic由回调函数更改为Promise.
          7、将添加后的表单清空。（名字，图片）
          8、店铺类别列表渲染出来。（分页）
          9、扩展：查找功能。













****************************2020.4.2****************************************************
目标：
    1、登陆完善一下。
    2、完成管理日志列表管理。组件封装（分页）
    3、管理员的管理。列表。（增加管理员，修改管理员密码）
其它：
    1、完成了对db的改造成Promise（持续中）
    2、将路由进行模块化。
******************插槽************************
https://blog.csdn.net/u012149969/category_7658602.html
1、匿名插槽
    1、引入一个组件
        <My>
            <div>456</div>
        </My>
    2、组件My：
        <div>
            <slot></slot>
            <slot></slot>
        123
        </div>
2、具名插槽
       1、引入一个组件
            <My>
                <div slot="one">456</div>
            </My>
        2、组件My：
            <div>
                <slot name="one"></slot>
                <slot></slot>
            123
            </div>
3、插槽作用域
     1、引入一个组件
        <My>
            <div slot="one" scope-slot='item'>456</div>
        </My>
     2、组件My：
        <div>
            <slot name="one" :data="{}" :userName="userName"></slot>
            <slot></slot>
        123
        </div>
******************************************
1、项目是没有固定写法的。
2、实现要从宏观的脚度去看。
*****************************************
思考：加载中。
    因为后续有很多的组件都要与接口打交道。
    在开始请求数据时，提示加载中。
    数据加载完毕之后，加载中关闭。
*******************axios*********************
axios:拦截器。
    1、拦截请求
        axios.interceptors.request.use((config)=>{
            config.url = "/ele"+config.url;// config.url -->/ele/login token
            return config;// 返回配置信息。如果不返回config请求是无法执行的。返回的配置信息才是你最终要请求的信息。
        })
    2、拦截响应
        // 响应拦截:实现对数据过滤的。
        axios.interceptors.response.use(res=>{
            // 返回值即是请求最终得到的内容。
            console.log(3333,res);
            return res.data;
        })
************************token********************************
token:令牌。  前后端分离开发。一个加密以后的字符串。该字符串可以被反编译。
    1、当用户登陆完成之后，服务端会生成一个令牌。并将令牌返回给前端。
        令牌：个人信息，过期时间
    2、前端得到令牌之后将其保存。
    3、当调用敏感的接口时，需要传递token.
    4、服务端会对token进行验证。
        1、验证token是否正确
            1、正确。
                验证token是否过期。
                    1、过期：返回过期信息给前端。前端让其自动退出。
                    2、未过期：继续执行。
            2、不正确。返回异常。前端让其自动退出。
**************token生成以及使用*****************************
1、下载模块 JWT--JSON web token
    cnpm install jwt-simple -S
2、引入
    const jwt = require("jwt-simple");
3、生成
    jwt.encode(payload,key);
4、解析
    jwt.decode(token,key);
* 在调用私密接口时使用。
***********************作业**********************************
1、App.vue
2、登陆的样式。
3、尝试完成日志的删除。
4、完成管理员列表。
5、完成管理员的添加
6、完成管理员的密码修改功能。
****************************2020.4.1****************************************************
首页详情列表页，登陆注册购物车。
1、可以话术你的项目
2、当你看到一个新的项目时，脑海当中应该有思路。
****************************************
目标：将后台管理的架构搭建好，完成登陆功能。axios jwt md5
**************elementUi*********************************
官网：https://element.eleme.cn/#/zh-CN
介绍：Element，一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端（PC端）组件库
1、不要去刻意记它的属性，组件名。
2、要将组件库当中的所有组件全部玩一遍。
使用步骤：
    1、安装
        cnpm install element-ui -S
    2、引入
        import ElementUI from 'element-ui';// 引入组件库
        import 'element-ui/lib/theme-chalk/index.css';// 引入的组件所需要的CSS
    3、使用
        Vue.use(ElementUI);// 安装elementui插件。

************md5********************************
md5:是一种加密方式。是不允许被反编译的。sha1 base64
1、下载
    cnpm install md5 -S
2、引入
    const md5 = require("md5");
3、加密
    const passWord = md5("加密的字符");



***********************************************
1、登陆界面。
2、管理界面。
    ********************1、***************************
    路由：
        {
            name:"login",
            meta:{
                isAuthorization:false
            }
        },
        {
            name:"app",
            children:[
                {
                    manageShop,
                    meta:{
                        isAuthorization:true
                    }
                },
                {
                    manageGoods
                }
            ]
        }
    *********************2、*****************************
    render(){return }
**************************作业**********
1、将投票功能完成。
2、微博。（vuex）
